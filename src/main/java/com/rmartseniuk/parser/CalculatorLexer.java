package com.rmartseniuk.parser;// Generated from CalculatorLexer.g4 by ANTLR 4.12.0

import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.RuntimeMetaData;
import org.antlr.v4.runtime.Vocabulary;
import org.antlr.v4.runtime.VocabularyImpl;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class CalculatorLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.12.0", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		NUMBER=1, POW=2, NL=3, WS=4, ID=5, PLUS=6, EQUAL=7, MINUS=8, MULT=9, DIV=10, 
		LPAR=11, RPAR=12, SC=13, COMMA=14;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"MANTISSA", "MANTISSA_HEX", "OCTAL", "HEX", "DECIMAL", "BINARY", "NUMBER", 
			"POW", "NL", "WS", "ID", "PLUS", "EQUAL", "MINUS", "MULT", "DIV", "LPAR", 
			"RPAR", "SC", "COMMA"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'^'", "'\\n'", null, null, "'+'", "'='", "'-'", "'*'", "'/'", 
			"'('", "')'", "';'", "','"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "NUMBER", "POW", "NL", "WS", "ID", "PLUS", "EQUAL", "MINUS", "MULT", 
			"DIV", "LPAR", "RPAR", "SC", "COMMA"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CalculatorLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CalculatorLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u000e\u00d1\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0001\u0000\u0001\u0000"+
		"\u0003\u0000,\b\u0000\u0001\u0001\u0001\u0001\u0003\u00010\b\u0001\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0005\u00025\b\u0002\n\u0002\f\u00028\t"+
		"\u0002\u0003\u0002:\b\u0002\u0001\u0002\u0001\u0002\u0004\u0002>\b\u0002"+
		"\u000b\u0002\f\u0002?\u0003\u0002B\b\u0002\u0001\u0002\u0001\u0002\u0004"+
		"\u0002F\b\u0002\u000b\u0002\f\u0002G\u0003\u0002J\b\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0005\u0003S\b\u0003\n\u0003\f\u0003V\t\u0003\u0003\u0003X\b\u0003\u0001"+
		"\u0003\u0001\u0003\u0004\u0003\\\b\u0003\u000b\u0003\f\u0003]\u0003\u0003"+
		"`\b\u0003\u0001\u0003\u0001\u0003\u0004\u0003d\b\u0003\u000b\u0003\f\u0003"+
		"e\u0003\u0003h\b\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0005\u0004"+
		"s\b\u0004\n\u0004\f\u0004v\t\u0004\u0003\u0004x\b\u0004\u0001\u0004\u0001"+
		"\u0004\u0004\u0004|\b\u0004\u000b\u0004\f\u0004}\u0003\u0004\u0080\b\u0004"+
		"\u0001\u0004\u0001\u0004\u0004\u0004\u0084\b\u0004\u000b\u0004\f\u0004"+
		"\u0085\u0003\u0004\u0088\b\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0005"+
		"\u0005\u008d\b\u0005\n\u0005\f\u0005\u0090\t\u0005\u0003\u0005\u0092\b"+
		"\u0005\u0001\u0005\u0001\u0005\u0004\u0005\u0096\b\u0005\u000b\u0005\f"+
		"\u0005\u0097\u0003\u0005\u009a\b\u0005\u0001\u0005\u0001\u0005\u0004\u0005"+
		"\u009e\b\u0005\u000b\u0005\f\u0005\u009f\u0003\u0005\u00a2\b\u0005\u0001"+
		"\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0006\u0003\u0006\u00ac\b\u0006\u0001\u0007\u0001\u0007\u0001"+
		"\b\u0001\b\u0001\t\u0004\t\u00b3\b\t\u000b\t\f\t\u00b4\u0001\t\u0001\t"+
		"\u0001\n\u0001\n\u0005\n\u00bb\b\n\n\n\f\n\u00be\t\n\u0001\u000b\u0001"+
		"\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f"+
		"\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012"+
		"\u0001\u0012\u0001\u0013\u0001\u0013\u0000\u0000\u0014\u0001\u0000\u0003"+
		"\u0000\u0005\u0000\u0007\u0000\t\u0000\u000b\u0000\r\u0001\u000f\u0002"+
		"\u0011\u0003\u0013\u0004\u0015\u0005\u0017\u0006\u0019\u0007\u001b\b\u001d"+
		"\t\u001f\n!\u000b#\f%\r\'\u000e\u0001\u0000\u000f\u0002\u0000EEee\u0002"+
		"\u0000++--\u0002\u0000MMmm\u0001\u000000\u0001\u000017\u0001\u000007\u0003"+
		"\u000019AFaf\u0003\u000009AFaf\u0001\u000019\u0001\u000009\u0001\u0000"+
		"11\u0001\u000001\u0003\u0000\t\t\r\r  \u0003\u0000AZ__az\u0004\u00000"+
		"9AZ__az\u00e9\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000"+
		"\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000"+
		"\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000"+
		"\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000"+
		"\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000"+
		"\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000"+
		"\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0001"+
		")\u0001\u0000\u0000\u0000\u0003-\u0001\u0000\u0000\u0000\u00059\u0001"+
		"\u0000\u0000\u0000\u0007W\u0001\u0000\u0000\u0000\tw\u0001\u0000\u0000"+
		"\u0000\u000b\u0091\u0001\u0000\u0000\u0000\r\u00ab\u0001\u0000\u0000\u0000"+
		"\u000f\u00ad\u0001\u0000\u0000\u0000\u0011\u00af\u0001\u0000\u0000\u0000"+
		"\u0013\u00b2\u0001\u0000\u0000\u0000\u0015\u00b8\u0001\u0000\u0000\u0000"+
		"\u0017\u00bf\u0001\u0000\u0000\u0000\u0019\u00c1\u0001\u0000\u0000\u0000"+
		"\u001b\u00c3\u0001\u0000\u0000\u0000\u001d\u00c5\u0001\u0000\u0000\u0000"+
		"\u001f\u00c7\u0001\u0000\u0000\u0000!\u00c9\u0001\u0000\u0000\u0000#\u00cb"+
		"\u0001\u0000\u0000\u0000%\u00cd\u0001\u0000\u0000\u0000\'\u00cf\u0001"+
		"\u0000\u0000\u0000)+\u0007\u0000\u0000\u0000*,\u0007\u0001\u0000\u0000"+
		"+*\u0001\u0000\u0000\u0000+,\u0001\u0000\u0000\u0000,\u0002\u0001\u0000"+
		"\u0000\u0000-/\u0007\u0002\u0000\u0000.0\u0007\u0001\u0000\u0000/.\u0001"+
		"\u0000\u0000\u0000/0\u0001\u0000\u0000\u00000\u0004\u0001\u0000\u0000"+
		"\u00001:\u0007\u0003\u0000\u000026\u0007\u0004\u0000\u000035\u0007\u0005"+
		"\u0000\u000043\u0001\u0000\u0000\u000058\u0001\u0000\u0000\u000064\u0001"+
		"\u0000\u0000\u000067\u0001\u0000\u0000\u00007:\u0001\u0000\u0000\u0000"+
		"86\u0001\u0000\u0000\u000091\u0001\u0000\u0000\u000092\u0001\u0000\u0000"+
		"\u0000:A\u0001\u0000\u0000\u0000;=\u0005.\u0000\u0000<>\u0007\u0005\u0000"+
		"\u0000=<\u0001\u0000\u0000\u0000>?\u0001\u0000\u0000\u0000?=\u0001\u0000"+
		"\u0000\u0000?@\u0001\u0000\u0000\u0000@B\u0001\u0000\u0000\u0000A;\u0001"+
		"\u0000\u0000\u0000AB\u0001\u0000\u0000\u0000BI\u0001\u0000\u0000\u0000"+
		"CE\u0003\u0001\u0000\u0000DF\u0007\u0005\u0000\u0000ED\u0001\u0000\u0000"+
		"\u0000FG\u0001\u0000\u0000\u0000GE\u0001\u0000\u0000\u0000GH\u0001\u0000"+
		"\u0000\u0000HJ\u0001\u0000\u0000\u0000IC\u0001\u0000\u0000\u0000IJ\u0001"+
		"\u0000\u0000\u0000JK\u0001\u0000\u0000\u0000KL\u0005<\u0000\u0000LM\u0005"+
		"8\u0000\u0000MN\u0005>\u0000\u0000N\u0006\u0001\u0000\u0000\u0000OX\u0007"+
		"\u0003\u0000\u0000PT\u0007\u0006\u0000\u0000QS\u0007\u0007\u0000\u0000"+
		"RQ\u0001\u0000\u0000\u0000SV\u0001\u0000\u0000\u0000TR\u0001\u0000\u0000"+
		"\u0000TU\u0001\u0000\u0000\u0000UX\u0001\u0000\u0000\u0000VT\u0001\u0000"+
		"\u0000\u0000WO\u0001\u0000\u0000\u0000WP\u0001\u0000\u0000\u0000X_\u0001"+
		"\u0000\u0000\u0000Y[\u0005.\u0000\u0000Z\\\u0007\u0007\u0000\u0000[Z\u0001"+
		"\u0000\u0000\u0000\\]\u0001\u0000\u0000\u0000][\u0001\u0000\u0000\u0000"+
		"]^\u0001\u0000\u0000\u0000^`\u0001\u0000\u0000\u0000_Y\u0001\u0000\u0000"+
		"\u0000_`\u0001\u0000\u0000\u0000`g\u0001\u0000\u0000\u0000ac\u0003\u0003"+
		"\u0001\u0000bd\u0007\u0007\u0000\u0000cb\u0001\u0000\u0000\u0000de\u0001"+
		"\u0000\u0000\u0000ec\u0001\u0000\u0000\u0000ef\u0001\u0000\u0000\u0000"+
		"fh\u0001\u0000\u0000\u0000ga\u0001\u0000\u0000\u0000gh\u0001\u0000\u0000"+
		"\u0000hi\u0001\u0000\u0000\u0000ij\u0005<\u0000\u0000jk\u00051\u0000\u0000"+
		"kl\u00056\u0000\u0000lm\u0001\u0000\u0000\u0000mn\u0005>\u0000\u0000n"+
		"\b\u0001\u0000\u0000\u0000ox\u0007\u0003\u0000\u0000pt\u0007\b\u0000\u0000"+
		"qs\u0007\t\u0000\u0000rq\u0001\u0000\u0000\u0000sv\u0001\u0000\u0000\u0000"+
		"tr\u0001\u0000\u0000\u0000tu\u0001\u0000\u0000\u0000ux\u0001\u0000\u0000"+
		"\u0000vt\u0001\u0000\u0000\u0000wo\u0001\u0000\u0000\u0000wp\u0001\u0000"+
		"\u0000\u0000x\u007f\u0001\u0000\u0000\u0000y{\u0005.\u0000\u0000z|\u0007"+
		"\t\u0000\u0000{z\u0001\u0000\u0000\u0000|}\u0001\u0000\u0000\u0000}{\u0001"+
		"\u0000\u0000\u0000}~\u0001\u0000\u0000\u0000~\u0080\u0001\u0000\u0000"+
		"\u0000\u007fy\u0001\u0000\u0000\u0000\u007f\u0080\u0001\u0000\u0000\u0000"+
		"\u0080\u0087\u0001\u0000\u0000\u0000\u0081\u0083\u0003\u0001\u0000\u0000"+
		"\u0082\u0084\u0007\t\u0000\u0000\u0083\u0082\u0001\u0000\u0000\u0000\u0084"+
		"\u0085\u0001\u0000\u0000\u0000\u0085\u0083\u0001\u0000\u0000\u0000\u0085"+
		"\u0086\u0001\u0000\u0000\u0000\u0086\u0088\u0001\u0000\u0000\u0000\u0087"+
		"\u0081\u0001\u0000\u0000\u0000\u0087\u0088\u0001\u0000\u0000\u0000\u0088"+
		"\n\u0001\u0000\u0000\u0000\u0089\u0092\u0007\u0003\u0000\u0000\u008a\u008e"+
		"\u0007\n\u0000\u0000\u008b\u008d\u0007\u000b\u0000\u0000\u008c\u008b\u0001"+
		"\u0000\u0000\u0000\u008d\u0090\u0001\u0000\u0000\u0000\u008e\u008c\u0001"+
		"\u0000\u0000\u0000\u008e\u008f\u0001\u0000\u0000\u0000\u008f\u0092\u0001"+
		"\u0000\u0000\u0000\u0090\u008e\u0001\u0000\u0000\u0000\u0091\u0089\u0001"+
		"\u0000\u0000\u0000\u0091\u008a\u0001\u0000\u0000\u0000\u0092\u0099\u0001"+
		"\u0000\u0000\u0000\u0093\u0095\u0005.\u0000\u0000\u0094\u0096\u0007\u000b"+
		"\u0000\u0000\u0095\u0094\u0001\u0000\u0000\u0000\u0096\u0097\u0001\u0000"+
		"\u0000\u0000\u0097\u0095\u0001\u0000\u0000\u0000\u0097\u0098\u0001\u0000"+
		"\u0000\u0000\u0098\u009a\u0001\u0000\u0000\u0000\u0099\u0093\u0001\u0000"+
		"\u0000\u0000\u0099\u009a\u0001\u0000\u0000\u0000\u009a\u00a1\u0001\u0000"+
		"\u0000\u0000\u009b\u009d\u0003\u0001\u0000\u0000\u009c\u009e\u0007\u000b"+
		"\u0000\u0000\u009d\u009c\u0001\u0000\u0000\u0000\u009e\u009f\u0001\u0000"+
		"\u0000\u0000\u009f\u009d\u0001\u0000\u0000\u0000\u009f\u00a0\u0001\u0000"+
		"\u0000\u0000\u00a0\u00a2\u0001\u0000\u0000\u0000\u00a1\u009b\u0001\u0000"+
		"\u0000\u0000\u00a1\u00a2\u0001\u0000\u0000\u0000\u00a2\u00a3\u0001\u0000"+
		"\u0000\u0000\u00a3\u00a4\u0005<\u0000\u0000\u00a4\u00a5\u00052\u0000\u0000"+
		"\u00a5\u00a6\u0005>\u0000\u0000\u00a6\f\u0001\u0000\u0000\u0000\u00a7"+
		"\u00ac\u0003\t\u0004\u0000\u00a8\u00ac\u0003\u000b\u0005\u0000\u00a9\u00ac"+
		"\u0003\u0005\u0002\u0000\u00aa\u00ac\u0003\u0007\u0003\u0000\u00ab\u00a7"+
		"\u0001\u0000\u0000\u0000\u00ab\u00a8\u0001\u0000\u0000\u0000\u00ab\u00a9"+
		"\u0001\u0000\u0000\u0000\u00ab\u00aa\u0001\u0000\u0000\u0000\u00ac\u000e"+
		"\u0001\u0000\u0000\u0000\u00ad\u00ae\u0005^\u0000\u0000\u00ae\u0010\u0001"+
		"\u0000\u0000\u0000\u00af\u00b0\u0005\n\u0000\u0000\u00b0\u0012\u0001\u0000"+
		"\u0000\u0000\u00b1\u00b3\u0007\f\u0000\u0000\u00b2\u00b1\u0001\u0000\u0000"+
		"\u0000\u00b3\u00b4\u0001\u0000\u0000\u0000\u00b4\u00b2\u0001\u0000\u0000"+
		"\u0000\u00b4\u00b5\u0001\u0000\u0000\u0000\u00b5\u00b6\u0001\u0000\u0000"+
		"\u0000\u00b6\u00b7\u0006\t\u0000\u0000\u00b7\u0014\u0001\u0000\u0000\u0000"+
		"\u00b8\u00bc\u0007\r\u0000\u0000\u00b9\u00bb\u0007\u000e\u0000\u0000\u00ba"+
		"\u00b9\u0001\u0000\u0000\u0000\u00bb\u00be\u0001\u0000\u0000\u0000\u00bc"+
		"\u00ba\u0001\u0000\u0000\u0000\u00bc\u00bd\u0001\u0000\u0000\u0000\u00bd"+
		"\u0016\u0001\u0000\u0000\u0000\u00be\u00bc\u0001\u0000\u0000\u0000\u00bf"+
		"\u00c0\u0005+\u0000\u0000\u00c0\u0018\u0001\u0000\u0000\u0000\u00c1\u00c2"+
		"\u0005=\u0000\u0000\u00c2\u001a\u0001\u0000\u0000\u0000\u00c3\u00c4\u0005"+
		"-\u0000\u0000\u00c4\u001c\u0001\u0000\u0000\u0000\u00c5\u00c6\u0005*\u0000"+
		"\u0000\u00c6\u001e\u0001\u0000\u0000\u0000\u00c7\u00c8\u0005/\u0000\u0000"+
		"\u00c8 \u0001\u0000\u0000\u0000\u00c9\u00ca\u0005(\u0000\u0000\u00ca\""+
		"\u0001\u0000\u0000\u0000\u00cb\u00cc\u0005)\u0000\u0000\u00cc$\u0001\u0000"+
		"\u0000\u0000\u00cd\u00ce\u0005;\u0000\u0000\u00ce&\u0001\u0000\u0000\u0000"+
		"\u00cf\u00d0\u0005,\u0000\u0000\u00d0(\u0001\u0000\u0000\u0000\u001e\u0000"+
		"+/69?AGITW]_egtw}\u007f\u0085\u0087\u008e\u0091\u0097\u0099\u009f\u00a1"+
		"\u00ab\u00b4\u00bc\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}